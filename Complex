class Complex{
  
  double a;
  double b;
  
  
  public Complex(double a, double b){
    this.a = a;
    this.b = b;
  }
  
  
  //Iterates until i exceeds MAX_ITERATIONS or magnitude of number exceeds ESCAPE_RADIUS
  public double iterate(Complex c){
    Complex dZ = new Complex(1,0);
    for(int i = 0; i < MAX_ITERATIONS; i++){
      
      //dZ = dZ*2*Z
      double tempa = dZ.a;
      double tempb = dZ.b;
      dZ.a = 2*((tempa*this.a) - (tempb*this.b));
      dZ.b = 2*((tempa*this.b) + (tempb*this.a));
      
      //Z = Z*Z + C
      tempa = this.a;
      tempb = this.b;
      this.a = (tempa*tempa) - (tempb*tempb) + c.a;
      this.b = 2*tempa*tempb + c.b;
      
      double mag = this.magnitudeSquared();
      if(mag >= ESCAPE_RADIUS)
        return i + 2 - Math.log(Math.log(mag)*1.4426950408889634)*1.4426950408889634;
      if(dZ.magnitudeSquared() <= EPSILON_RADIUS)
        return -1;
    }
    return -1;
  }
  
  
  public double magnitudeSquared(){
    return (this.a*this.a) + (this.b*this.b);
  }
  
}
